{"pageProps":{"membersPhotoUrl":{"@koba04":"/assets/photo/f8079885d680213e64e4d706daa4a5ee_400x400.jpeg","@pirosikick":"/assets/photo/a95b52be00e06cd293a6853bc36490bc_400x400.jpeg","@toshi__toma":"/assets/photo/fGX7e5wk_400x400.jpg","@zaki___yama":"/assets/photo/Q_ihmvTQ_400x400.png","@__sakito__":"/assets/photo/erghEqaW_400x400.png","@nakajmg":"/assets/photo/EKNVNzOg_400x400.jpg","@b4h0_c4t":"/assets/photo/QySbTwnO_400x400.jpg","@__sosukesuzuki":"/assets/photo/7iJNhdua_400x400.jpg"},"frontmatter":{"title":"Cybozu Frontend Monthly","date":"2020-08-25T17:00:00+09:00","slug":"2020-08","connpass":"https://cybozu.connpass.com/event/185136/","streamUrl":"https://www.youtube.com/watch?v=6r_ltoTwg4M","hashTag":"#サイボウズフロントエンドマンスリー","no":2,"members":[{"name":"@koba04","link":"https://twitter.com/koba04"},{"name":"@pirosikick","link":"https://twitter.com/pirosikick"},{"name":"@toshi__toma","link":"https://twitter.com/toshi__toma"},{"name":"@zaki___yama","link":"https://twitter.com/zaki___yama"},{"name":"@__sakito__","link":"https://twitter.com/__sakito__"},{"name":"@nakajmg","link":"https://twitter.com/nakajmg"},{"name":"@b4h0_c4t","link":"https://twitter.com/b4h0_c4t"},{"name":"@__sosukesuzuki","link":"https://twitter.com/__sosukesuzuki"}],"guest":null},"html":"<h3 id=\"the-just-in-case-mindset-in-css\"><a href=\"#the-just-in-case-mindset-in-css\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://ishadeed.com/article/the-just-in-case-mindset-css/\" target=\"_blank\" rel=\"nofollow\">The Just in Case Mindset in CSS</a></h3>\n<ul>\n<li>共有者: b4h0_c4t</li>\n</ul>\n<p>よくあるデザインコンポーネントで発生しがちなデザイン乱れのシナリオをまとめた記事。\nこの記事では主に、コンポーネント内部に想定外の長さやコンテンツが挿入された場合のシナリオについて触れている。</p>\n<p>コンポーネント 1 つにつき CSS1-5 行程度のシンプルな解説ですが、こういう細かいところにも気を使っていきたいという強い気持ちを持って共有します。\n実際、こういったケースは知らないと対応のしようがないので全人類知っていこう 💪</p>\n<hr>\n<h3 id=\"a-complete-guide-to-dark-mode-on-the-web\"><a href=\"#a-complete-guide-to-dark-mode-on-the-web\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://css-tricks.com/a-complete-guide-to-dark-mode-on-the-web/\" target=\"_blank\" rel=\"nofollow\">A Complete Guide to Dark Mode on the Web</a></h3>\n<ul>\n<li>共有者： nakajmg</li>\n</ul>\n<p>Web サイトをダークモードに対応させるための Tips やアプローチのまとめです。 <code>prefers-color-scheme</code> を使ってシステム設定をもとに対応する方法は広く知られるようになってきましたね。\nユーザのシステム設定に合わせてテーマを切り替えること自体は難しくないですが、ユーザがシステム設定をダークモードにしていることが Web サイトをダークモードで見たいことと等価ではないことを考慮したほうがよいと記事内では言及しています。\nシステムの設定を見つつ、Web サイト上でもテーマをトグルできるような実装が親切で、加えて切り替えた内容を保持するようにしておくとよいとのことです。</p>\n<p>また、ダークモードはただ色調を反転させただけでは文字や画像のコントラストなどが優しくない・調和が取れていないことがあるので、どういった調整をするとよいかについてもふれています。</p>\n<hr>\n<h3 id=\"you-may-finally-use-jshint-for-evil\"><a href=\"#you-may-finally-use-jshint-for-evil\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"http://mikepennisi.com/blog/2020/you-may-finally-use-jshint-for-evil/\" target=\"_blank\" rel=\"nofollow\">You May Finally Use JSHint for Evil</a></h3>\n<ul>\n<li>共有者: pirosikick</li>\n</ul>\n<p>JSHint のライセンス変更について。\n以前は一部のファイルが JSON License で提供されておりフリーの OSS とは言えない状況だったが、2.12.0 で完全に MIT ライセンスに変更された。\nライセンス変更が完了するまでの話を 4 つのエッセイで説明している。\n該当ファイルのコントリビューター全員に許諾を取ろうとしたがどうしても連絡がつかない人が居たので、\nその人達が当てたパッチを完全に書き換えることで対応したらしい（読み違えてたら申し訳ない）。\n読み応えのある記事で、面白かったです。よくやりきったな〜と思いました。</p>\n<hr>\n<h3 id=\"react-v170-release-candidate-no-new-features\"><a href=\"#react-v170-release-candidate-no-new-features\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://reactjs.org/blog/2020/08/10/react-v17-rc.html\" target=\"_blank\" rel=\"nofollow\">React v17.0 Release Candidate: No New Features</a></h3>\n<ul>\n<li>共有者: sakito</li>\n</ul>\n<p>React v17 のリリース。\n新しい機能は無いが、Concurrent Mode に向けてバージョンアップしておきたい。\nv17 からアプリ内の React のバージョンを段階的にアップグレードできるようになったので、\nConcurrent Mode が入るであろう v18 の前には対応しておいて、バージョンアップに選択肢を持たせることができる。</p>\n<p>イベント周りや useEffect の cleanup で破壊的変更は入っているので、余裕をもって v17 にあげるのがいいと思う。</p>\n<hr>\n<h3 id=\"whats-new-in-devtools-chrome-86\"><a href=\"#whats-new-in-devtools-chrome-86\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://developers.google.com/web/updates/2020/08/devtools\" target=\"_blank\" rel=\"nofollow\">What's New In DevTools (Chrome 86)</a></h3>\n<ul>\n<li>共有者： @toshi__toma</li>\n</ul>\n<p>Chrome 86 の DevTools 情報。結構盛りだくさんだった。</p>\n<p>メディアプレーヤーの情報を確認できる「Media」パネルの追加。\nエミュレート系の機能がいくつか入ってる。(Idle/screen lock, prefers-reduced-data, missing local fonts)</p>\n<p>Element パネルから、特定の DOM ノードのスクリーンショットが簡単にできるようになった。\nアクセシビリティ系は、カラーピッカーでコンストラストに問題のある色はサジェストしてくれる。準拠レベル AA および AAA の色の提案が表示され、クリックすると適用される。\nあと、Application パネルの Service Workers ペインに 他のオリジンの情報も表示されてたけど、それが無くなったの嬉しい。</p>\n<hr>\n<h3 id=\"enabling-custom-control-ui\"><a href=\"#enabling-custom-control-ui\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/ControlUICustomization/explainer.md\" target=\"_blank\" rel=\"nofollow\">Enabling Custom Control UI</a></h3>\n<ul>\n<li>共有者: zaki___yama</li>\n</ul>\n<p><code>&#x3C;select></code> などのフォームコントロールを開発者がより柔軟にカスタマイズできるようにするというプロポーザルです。<br>\n<a href=\"https://twitter.com/soMelanieSaid/status/1285372141429338112?s=20\" target=\"_blank\" rel=\"nofollow\">Edge の Program Manager のツイート</a> で知りました。</p>\n<p>基本的なアプローチは以下のような 2 ステップになっており、</p>\n<ol>\n<li>現在のコントロールの概念的なパーツやふるまい、各パーツの名称を仕様として標準化する\n<ul>\n<li>例: <code>&#x3C;select></code> は\n<ul>\n<li>1 つの \"button\" + 1 つの \"selected-value\" + 1 つの \"listbox\" + 0~N 個の \"option\" で構成される</li>\n<li>期待するふるまいは\n<ul>\n<li>\"button\" がクリックされると \"listbox\" を表示する</li>\n<li>\"selected-value\" は内部テキストを更新し、現在選択中の option の値を表示する</li>\n<li>開いているリストの外側をクリックするとリストは折りたたまれる</li>\n<li>etc.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>標準化されたパーツの名称と <code>part</code> という擬似要素・属性を使い、各パーツにスタイルを適用したり、開発者が作成したコンポーネントに置き換える<br>\nプロポーザル中では、カスタマイズの自由度に応じて 3 つの選択肢が紹介されている。\n<ol>\n<li><code>::part(button)</code> のように擬似クラスを使ってスタイルを適用する 2. 名前付き slot で任意のパーツを開発者が作成したコンポーネントと置き換える 3. <code>attachShadow()</code> でコントロールをまるっと開発者が作成したコンポーネントと置き換える</li>\n</ol>\n</li>\n</ol>\n<p>選択肢 ii の例として、</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\"><span class=\"token class\">.custom-button</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/*...*/</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">option</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/*...*/</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\"><span class=\"token class\">.option-text</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/*...*/</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>select</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">part</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>custom-button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Choose a pet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>listbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">part</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>listbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>custom-listbox<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>option</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./cat-icon.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>option-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Cat<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>option</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>option</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./dog-icon.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>option-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Dog<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>select</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>のようなコードで、こういうカスタムドロップダウンが作れるようになります。</p>\n<p><img src=\"https://raw.githubusercontent.com/MicrosoftEdge/MSEdgeExplainers/main/ControlUICustomization/catDogSelect.png\" alt=\"\"></p>\n<p>標準化された <code>part</code> 名を使っていれば、ふるまいやアクセシビリティに関してはプラットフォーム側がよしなに管理してくれるので<br>\n開発者は見た目のカスタマイズに専念することができる、ということのようです。</p>\n<p>その他のメモはこちらに：<a href=\"https://dackdive.hateblo.jp/entry/2020/08/19/080000\" target=\"_blank\" rel=\"nofollow\">https://dackdive.hateblo.jp/entry/2020/08/19/080000</a></p>\n<hr>\n<h3 id=\"prettier-21-new---embedded-language-formatting-option-and-new-javascripttypescript-features\"><a href=\"#prettier-21-new---embedded-language-formatting-option-and-new-javascripttypescript-features\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://prettier.io/blog/2020/08/24/2.1.0.html\" target=\"_blank\" rel=\"nofollow\">Prettier 2.1: new --embedded-language-formatting option and new JavaScript/TypeScript features!</a></h3>\n<ul>\n<li>共有者: sosukesuzuki</li>\n</ul>\n<p>コードフォーマッター Prettier の 2.1 のリリース。重要なメンテナの一人が急にいなくなってしまい、ブログの準備とリリースを自分がやることになってしまったバージョン。リグレッションを見つけた方は GitHub の Issue もしくは自分のツイッター(<a href=\"https://twitter.com/__sosukesuzuki\" target=\"_blank\" rel=\"nofollow\">@__sosukesuzuki</a>)に連絡をください。</p>\n<h4 id=\"--embedded-language-formatting-オプションの追加。\"><a href=\"#--embedded-language-formatting-%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E8%BF%BD%E5%8A%A0%E3%80%82\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><code>--embedded-language-formatting</code> オプションの追加。</h4>\n<p>Prettier は Tagged Template Literal を使った次のようなコードをフォーマットしますが、その挙動を制御することができるようになります。\n<a href=\"https://prettier.io/playground/#N4Igxg9gdgLgprEAuEALGBbANgAwDpQA8ADgHwBmEEhA9GYQCYCWAbhVbc2wTgNwEgANCAjEYTaAGdkoAIYAneRADuABQUJpKWVmWyAntOEAjebLABrODADKxc0ygBzZDHkBXOMLgZjcBgz+ADKyzu6yTnAAYhDyGLIw4s7IIuTkQmiYWADqqEzwkvZgcDaa+az5+ilgkkYgjpJw8jCqZk7xyOQ6jcIAVpIAHgBCZpbWNrIYcEGOcJ3dXiD9AzaOTlhwAIruEPDzWD0g9vKN8inGsn5YGcTyjjDZTAwwqMgAHAAMwrcQjdlmxBStzgpxYc2EAEcdvBWqItCBZJIALRQOD+fwZeRwKFMLGtCIdJBdA6LRoYJiuDyktYbba7OZEhbCGCXR7PV5IABMzLMTCwawAwhAMISQCCAKwZdyNAAqly0xMOLE8AEkoIFYDYwHcxABBdU2GD6Db7RoAXzNQA\" target=\"_blank\" rel=\"nofollow\">Playground Link</a></p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Input</span>\nhtml<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token html language-html\">\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>p</span><span class=\"token punctuation\">></span></span>foo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>foo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Output (--embedded-language-formatting=auto)</span>\nhtml<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token html language-html\">\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>p</span><span class=\"token punctuation\">></span></span>foo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>foo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Output (--embedded-language-formatting=off)</span>\nhtml<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token html language-html\">\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>p</span><span class=\"token punctuation\">></span></span>foo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>foo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>現在は <code>auto</code> と <code>off</code> の２つのオプションしかありませんが、Boolean で表現されていないことからわかるように、将来的には増える可能性があります。</p>\n<h4 id=\"typescript-40-のサポート。\"><a href=\"#typescript-40-%E3%81%AE%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%80%82\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>TypeScript 4.0 のサポート。</h4>\n<p>TypeScript 4.0 から入った次の構文のフォーマットをサポートします。</p>\n<ul>\n<li>Labeled Tuple Elements</li>\n<li>Short-Circuiting Assignment Operators</li>\n<li>Type annotations on catch clauses</li>\n</ul>\n<h4 id=\"vue-の-sfc-のカスタムブロックのフォーマットのサポート。\"><a href=\"#vue-%E3%81%AE-sfc-%E3%81%AE%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%AE%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E3%81%AE%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%80%82\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Vue の SFC のカスタムブロックのフォーマットのサポート。</h4>\n<p>Vue の SFC 内の <code>lang</code> 属性付きのカスタムブロックのフォーマットをサポートします。一部の ESLint ルール(<a href=\"https://eslint.gridsome.org/rules/format-query-block.html\" target=\"_blank\" rel=\"nofollow\">eslint-plugin-gridsome の <code>format-query-block</code> など</a>)が不要になるかもしれません。\n<a href=\"https://prettier.io/playground/#N4Igxg9gdgLgprEAuEAeAlgRgBxQAQA2AhlAOYC8AOiAFYDO01AfJVMK9QBZwEETVJWAcgAOAJzgwY6OGKEAaVgF9WqAPRZcLKCHkgII6dDrJQRMWIgB3AArmEJlEQJWiATxN6ARmKJgA1pIAyiJ+6GTIMGIArnB6cAC2XnAAJimpADIkpNFEpHAAYhBiCURS4aTIIETRMBC6IJwwCQQA6pzo8HShYHBBDp3oAG6dblVgdJ4g4XSyMDa+pKXIAGbOs3r0AB4AQr4BwUQJcBnhcKvrcbR0W0EVBHAAitEQ8BcEGyChYrNiVUOxBricIwVroFIwTjIbAABj04ggs1avhEVXEcF+Q3OegAji94AsDI5qnQALRQOCpVINCR49ASBZ5ZZINYfK6zBLoSIxdn3J7484sy56GBELxgiFQpAAJhFvnQBAqAGEIAlmSAMQBWBrRWYAFTFjlZnwBcAAklB0rAgmAxOhDABBS1BGBuB7vWZKJRAA\" target=\"_blank\" rel=\"nofollow\">Playground Link</a></p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&#x3C;!-- Input --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>i18n</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>json<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> { \"hello\": 'prettier', } <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>i18n</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&#x3C;!-- Output --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>i18n</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>json<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> { \"hello\": \"prettier\" } <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>i18n</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<hr>\n<h3 id=\"grids-part-1-to-grid-or-not-to-grid\"><a href=\"#grids-part-1-to-grid-or-not-to-grid\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://sarahmhigley.com/writing/grids-part1/\" target=\"_blank\" rel=\"nofollow\">Grids Part 1: To grid or not to grid</a></h3>\n<ul>\n<li>共有者: b4h0_c4t</li>\n</ul>\n<p>Grid を使うか Table を使うかという話\n雑にまとめると、扱うデータがセル単位でインタラクティブな場合は Grid、全データで 1 つの意味になるような静的データを扱う場合は Table が良いという話だった。</p>\n<p>定番のスクリーンリーダーから見たアクセシビリティの話やコンテキストによってこうあるべきみたいな話があって実用的に感じたので共有しました。</p>\n<hr>\n<h3 id=\"microsoft-365-apps-say-farewell-to-internet-explorer-11-and-windows-10-sunsets-microsoft-edge-legacy\"><a href=\"#microsoft-365-apps-say-farewell-to-internet-explorer-11-and-windows-10-sunsets-microsoft-edge-legacy\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://techcommunity.microsoft.com/t5/microsoft-365-blog/microsoft-365-apps-say-farewell-to-internet-explorer-11-and/ba-p/1591666\" target=\"_blank\" rel=\"nofollow\">Microsoft 365 apps say farewell to Internet Explorer 11 and Windows 10 sunsets Microsoft Edge Legacy</a></h3>\n<ul>\n<li>共有者： nakajmg</li>\n</ul>\n<p>Microsoft のサービスが IE11 のサポートを切るお話。\nMicrosoft Teams が 11/30 に、Microsoft 365 アプリが 2021/08/17 に IE のサポートを終了するとのこと。\n合わせて旧 Edge から新 Edge への移行も勧めている。</p>\n<p>Microsoft がこういった方針を発表してくれたことで、ほかのサービス提供者も IE11 を切る方向に舵取りしやすくなるかも。\nただし日本と国外で IE11 の利用率に差がありそうなのでそう簡単な話でもなさそうなところがアレですねぇ 👻</p>\n<hr>\n<h3 id=\"generating-uuids-at-scale-on-the-web\"><a href=\"#generating-uuids-at-scale-on-the-web\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://medium.com/teads-engineering/generating-uuids-at-scale-on-the-web-2877f529d2a2\" target=\"_blank\" rel=\"nofollow\">Generating UUIDs at scale on the Web</a></h3>\n<ul>\n<li>共有者: pirosikick</li>\n</ul>\n<p>先月の記事だけど、面白かったので。\n前半は UUID のバージョンの違いと、クライアントサイドで UUID v4 を発行する方法。\n<code>URL.createObjectURL(new Blob())</code>で UUID を得る方法は知らなかった。\n記事では、<code>Crypto.getRandomValues</code>（fallback として<code>Math.random</code>） + Web Worker で実装。\n実装を A/B テストでテストしたところ、想定よりも生成した UUID が衝突するという結果に。\n調査すると、衝突の約 9 割は Googlebot（Google Mobile 41.0 で Mountain View の IP）、残りは PS Vita のブラウザなど。\n最初は UUID 生成する記事かと思ったけど、衝突の原因について突っ込んで調べていて面白かったです。</p>\n<hr>\n<h3 id=\"storybook-v6-リリース\"><a href=\"#storybook-v6-%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://github.com/storybookjs/storybook/releases/tag/v6.0.0\" target=\"_blank\" rel=\"nofollow\">Storybook v6 リリース</a></h3>\n<ul>\n<li>共有者: sakito</li>\n</ul>\n<p>Storybook のメジャーバージョンが更新されました。</p>\n<p>この更新により、Storybook の TypeScript の設定が内部で持たれるので、TypeScript の設定が不要になりました。\n内部では fork-ts-checker-webpack-plugin を使用するようになり、fork-ts-checker-webpack-plugin の otion を拡張することができます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// .storybook/main.js</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  typescript<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    check<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    checkOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    reactDocgen<span class=\"token operator\">:</span> <span class=\"token string\">\"react-docgen-typescript\"</span><span class=\"token punctuation\">,</span>\n    reactDocgenTypescriptOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      shouldExtractLiteralValuesFromEnum<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">propFilter</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prop</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span>\n        prop<span class=\"token punctuation\">.</span><span class=\"token property-access\">parent</span> <span class=\"token operator\">?</span> <span class=\"token operator\">!</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">test</span><span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">.</span><span class=\"token property-access\">parent</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">fileName</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>詳しくはこちらのドキュメントを見るのが良いです。\n<a href=\"https://storybook.js.org/docs/react/configure/typescript\" target=\"_blank\" rel=\"nofollow\">https://storybook.js.org/docs/react/configure/typescript</a></p>\n<p>そのほかに addon のベストプラクティス的な<a href=\"https://storybook.js.org/docs/react/essentials/introduction\" target=\"_blank\" rel=\"nofollow\">@storybook/addon-essentials</a>が追加されたので、これを組み込むと storybook を便利にする addon が利用できます。</p>\n<p>他にも多くの更新があるので、<a href=\"https://github.com/storybookjs/storybook/blob/next/MIGRATION.md\" target=\"_blank\" rel=\"nofollow\">MIGRATION.md</a>を見るとよいです。</p>\n<p>v6 とは関係ありませんが、v7 で config.js などの古い設定方法が廃止される予定です。\n<a href=\"https://storybook.js.org/docs/react/configure/overview#configure-your-storybook-project\" target=\"_blank\" rel=\"nofollow\">main.js</a>を使用する形に今から準備しておくといいと思います。</p>\n<hr>\n<h3 id=\"npm-v7-series---beta-release-and-semver-major-changes-in-npm-v7\"><a href=\"#npm-v7-series---beta-release-and-semver-major-changes-in-npm-v7\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://blog.npmjs.org/post/626173315965468672/npm-v7-series-beta-release-and-semver-major\" target=\"_blank\" rel=\"nofollow\">npm v7 Series - Beta Release! And: SemVer-Major Changes in npm v7</a></h3>\n<ul>\n<li>共有者： @toshi__toma</li>\n</ul>\n<p>npm v7 の Beta。大きな変更点は、peerDependencies の自動インストール。依存が競合すると、エラーになるので、ユーザーは競合を修正するべき。\nただそれを解除して従来どおりにインストールするのは、<code>—logacy-peer-deps</code>フラグを使う。\n数年間、正確性に欠けた状態に依存するようになったので、大変なパッケージとかもあるかも。</p>\n<p>あとは内部的な変更(@npmcli/arborist, pacote)、Lifecycle Scripts の環境変数の大幅な変更、npx の代替となる、新しい npm exec コマンドの追加。</p>\n<p>「Silence successful npm pre/post/install scripts」npm install とかやってる時にスクリプトが実行されてログが大量に出る系は、エラーで終了しない限りはサイレントになるの結構嬉しい。</p>\n<p>他は、packge.json から _ prefix のメタデータが消える、yarn.lock ファイルのサポート、workspaes フォールドのサポートなどもある。\n互換性のある依存パッケージのバージョンを指定して、重複排除を可能にする acceptDependencies というのが新しく追加された。</p>\n<hr>\n<h3 id=\"cookie-の-httponly-属性でどこまで安全になるのか---youtube\"><a href=\"#cookie-%E3%81%AE-httponly-%E5%B1%9E%E6%80%A7%E3%81%A7%E3%81%A9%E3%81%93%E3%81%BE%E3%81%A7%E5%AE%89%E5%85%A8%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%AE%E3%81%8B---youtube\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a><a href=\"https://www.youtube.com/watch?v=4JREwhSC2dQ&#x26;list=PLWiFLcGkQgLx8lbno3zZEinqu5C19hwET\" target=\"_blank\" rel=\"nofollow\">Cookie の HttpOnly 属性でどこまで安全になるのか - YouTube</a></h3>\n<ul>\n<li>共有者: zaki___yama</li>\n</ul>\n<p>徳丸先生の Web セキュリティに関する動画です。<br>\nJS から Cookie にアクセスできなくする <code>HttpOnly</code> 属性ですが、XSS に対してはどれくらい有効なのかという解説です。</p>\n<ul>\n<li>XSS で <code>fetch</code> や <code>XMLHttpRequest</code> が実行された場合、そのリクエストには Cookie が付与される</li>\n<li>秘密情報を HTML 内に埋め込んでいる場合は、XSS で <code>innerHTML</code> を取得することで読み取れる</li>\n</ul>\n<p>といった例を紹介し、XSS の緩和策ではあるものの完全な防御ではないことが示されていました</p>\n<hr>\n<h3 id=\"今月の-jserinfo\"><a href=\"#%E4%BB%8A%E6%9C%88%E3%81%AE-jserinfo\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>今月の JSer.info</h3>\n<p>毎週のフロントエンドウィークリーでは、各メンバーからの共有以外にも<a href=\"https://jser.info/\" target=\"_blank\" rel=\"nofollow\">Jser.info</a>を確認しています。いつもお世話になっています 🙌\n今月で 500 回目の更新とのことです。おめでとうございます 🎉\n<a href=\"https://jser.info/2020/08/11/500/\" target=\"_blank\" rel=\"nofollow\">JSer.info 500 回目の更新 - Slack ワークスペース作成、コラボレータ募集、10 年に向けて</a></p>\n<ul>\n<li><a href=\"https://jser.info/2020/08/18/storybook-6.0.0-npm-7-beta-hapi-20maintainer/\" target=\"_blank\" rel=\"nofollow\">2020-08-18 の JS: Storybook 6.0.0、npm 7 beta、hapi 20(Maintainer の交代)</a></li>\n<li><a href=\"https://jser.info/2020/08/11/react-17.0-rc-rome-thinking-in-microfrontend/\" target=\"_blank\" rel=\"nofollow\">2020-08-11 の JS: React 17.0 RC、Rome、Thinking in Microfrontend\n</a></li>\n<li><a href=\"https://jser.info/2020/08/04/firefox-79-babel-7.11.0-speculation-in-javascriptcore/\" target=\"_blank\" rel=\"nofollow\">2020-08-04 の JS: Firefox 79、Babel 7.11.0、Speculation in JavaScriptCore</a></li>\n</ul>\n<hr>\n"},"__N_SSG":true}
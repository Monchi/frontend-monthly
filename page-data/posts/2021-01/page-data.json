{"componentChunkName":"component---src-post-template-js","path":"/posts/2021-01","result":{"data":{"markdownRemark":{"html":"<h3>JavaScript アンケート周り</h3>\n<ul>\n<li>共有者: @__sakito__</li>\n<li>\n<p><a href=\"https://2020.stateofjs.com/en-US/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">State of JS 2020</a></p>\n<ul>\n<li><a href=\"https://2020.stateofjs.com/ja-JP/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">日本語訳</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://risingstars.js.org/2020/en\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">2020 JavaScript Rising Stars</a></p>\n<ul>\n<li><a href=\"https://risingstars.js.org/2020/ja\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">日本語訳</a></li>\n</ul>\n</li>\n</ul>\n<p>両方とも 2020 年の流れを把握するのに使えそうです。</p>\n<p>State of JS は、ビルドが esbuild や sbowpack、フレームワークは引き続き svelte に興味持ってる人が多かったです。\nしかし実際に使用してるものは、webpack などになっており、新しいものはまだプロダクションで使用するには踏み込めない印象。\n各項目で色々な人が 2020 年の個人的ベストを紹介してるのが面白かった、<a href=\"https://github.com/atlassian/changesets\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">changesets</a>、<a href=\"https://insomnia.rest/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Insomnia</a>、<a href=\"https://redwoodjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redwood</a>など知らないものを知れました。</p>\n<p>2020 JavaScript Rising Stars は、あくまでスター数なので State of JS 2020 と見比べて世間がどこに注目しているか照らし合わせるとよさそうです。\n各セクションで説明もあるので、なぜスター数が増えたのかもわかりやすいです。</p>\n<hr>\n<h3><a href=\"https://uxmovement.com/buttons/dont-use-inverted-color-cues-on-toggle-buttons/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Don’t Use Inverted Color Cues on Toggle Buttons</a></h3>\n<ul>\n<li>共有者: @pirosikick</li>\n</ul>\n<p>トグルボタンでボタンの文字色と背景色を反転させた ON・OFF ボタンを作りがちだが、\n色のコントラスト比が同じになるのでどちらが ON で OFF なのかわからず誤操作が増えがちなので気をつけなはれや、という内容。\nブログの画像を見ると分かりやすいですが、色の反転の代わりに奥行きで ON/OFF を表現するといいよとのことです。\n最近、tailwind.css を使っていて悪い例と同じようなことをしていたので、タイムリーで参考になりました。</p>\n<hr>\n<h3><a href=\"https://tech.classi.jp/entry/2021/01/18/103110\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Classi にフロントエンドエキスパートチームを作った話</a></h3>\n<ul>\n<li>共有者: @nakajmg</li>\n</ul>\n<p>Classi さんがフロントエンドエキスパートチームを作った話。\n弊チームを参考にしてくれたとのことで、私達の活動が界隈に影響を与えられていると思うと嬉しいですね。</p>\n<p>記事中では<a href=\"https://giamir.com/frontendops\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FrontendOps</a>について触れており、フロントエンドの運用が開発者だけの関心事ではなく、チーム全員にとって重要であると説明しています。\n今後ますますフロントエンドの運用は重要な関心事となっていくと思いますので、弊フロントエンドエキスパートチームとしても真摯に向き合って行きたいです。</p>\n<hr>\n<h3><a href=\"https://www.smashingmagazine.com/2021/01/front-end-performance-2021-free-pdf-checklist/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Front-End Performance Checklist 2021 — Smashing Magazine</a></h3>\n<ul>\n<li>共有者: @shisama</li>\n</ul>\n<p>パフォーマンスに関するチェックリストです。<br>\n77 個のチェックリストがありますが、長大なので挫折しそうな人はサマライズされている <a href=\"https://www.dropbox.com/s/34noajrbm324iai/performance-checklist-1.4.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PDF 版</a> を読んでみて気になるところは記事の方を読んでみるのが良いかと思います。</p>\n<p>記事の最後には<strong>Quic Wins</strong>として 1 時間で改善できる 17 個のことを記事中からピックアップされているので、まずはこれからはじめるのも良さそうです。<br>\n個人的には「パフォーマンスの文化を作る」が最初に来ているところがいいと思いました。</p>\n<p>パフォーマンスに関連する話で今月知ったものもあわせて紹介しておきます。</p>\n<p>この記事の中でも CoreWebVitals を使って計測する話があり、DevTools で計測したり、<a href=\"https://chrome.google.com/webstore/detail/web-vitals/ahfhijdlegdabablpippeagghigmibma?hl=en\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chrome 拡張</a>を使っている人が多いと思いますが、Chrome 90 からは Experimental ですが Chrome 本体でもメトリクスを常に監視できるようになるようです。<br>\n<a href=\"https://addyosmani.com/blog/performance-hud/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AddyOsmani.com - A Performance Heads-Up Display (HUD) for Chrome</a></p>\n<p>JS のサイズについては、モダンブラウザで使える JS の構文を使うことでバンドルサイズを減らせると紹介されています。<br>\nJS のネイティブに置き換えることでどれくらいバンドルサイズを減らせるかをチェックするツールがあるので、試してみるといいかもしれません。<br>\n<a href=\"https://estimator.dev/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">EStimator.dev: the modern JavaScript savings calculator</a></p>\n<hr>\n<h3><a href=\"https://github.com/tc39/agendas/blob/master/2021/01.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Agenda for the 80th meeting of Ecma TC39</a></h3>\n<p>TC39 の１月のミーティングのアジェンダです。25 日~28 日にかけて行われます。</p>\n<p>このミーティングでは多くのプロポーザルについての議論が行われる予定です。</p>\n<h4><a href=\"https://github.com/tc39/ecma402\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intl 系(ECMA402)</a>のプロポーザル</h4>\n<ul>\n<li><a href=\"https://github.com/tc39/proposal-intl-DateTimeFormat-formatRange\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intl.DateTimeFormat.prototype.formatRange</a> for Stage 4</li>\n<li><a href=\"https://github.com/tc39/proposal-intl-locale-info\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intl Locale Info</a> for stage 2</li>\n<li><a href=\"https://github.com/tc39/intl-displaynames-v2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intl DisplayNames</a> v2 for stage 2</li>\n<li><a href=\"https://github.com/Louis-Aime/proposal-intl-eradisplay\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">eraDisplay option for Intl.DateTimeFormat</a> for stage 1</li>\n<li><a href=\"https://github.com/longlho/proposal-intl-localematcher\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intl LocaleMatcher</a> for Stage 1</li>\n<li><a href=\"https://github.com/FrankYFTang/proposal-intl-extend-timezonename/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Extend TimeZoneName Option Proposal</a> for stage 1</li>\n</ul>\n<h4>新しい構文を追加するプロポーザル</h4>\n<ul>\n<li>⭐<a href=\"https://github.com/tc39/proposal-class-static-block\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Class static Initialization Blocks</a> for Stage 3</li>\n<li>⭐<a href=\"https://github.com/tc39/proposal-json-modules\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JS Module Blocks</a> for stage 2</li>\n<li>⭐<a href=\"https://github.com/bakkot/do-expressions-v2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">do expressions</a> for stage 2</li>\n<li><a href=\"https://github.com/bakkot/proposal-async-do-expressions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">async do expressions</a> for stage 1</li>\n<li><a href=\"https://github.com/mathiasbynens/proposal-regexp-set-notation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Adopting Unicode behavior for set notation in regular expressions</a></li>\n<li>⭐<a href=\"https://github.com/codehag/proposal-lazy-import\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">defer module import eval</a> for stage 1</li>\n</ul>\n<h4>新しい API を追加するプロポーザル</h4>\n<ul>\n<li>⭐<a href=\"https://github.com/tc39/proposal-relative-indexing-method\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Relative indexing method</a> for stage 4</li>\n<li><a href=\"https://github.com/tc39/proposal-array-is-template-object\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Array.isTemplateObject</a> for stage 3</li>\n<li>⭐<a href=\"https://github.com/tc39/proposal-temporal\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Temporal</a> updates</li>\n<li><a href=\"https://github.com/tc39/proposal-resizablearraybuffer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ResizableArrayBuffer and GrowableSharedArrayBuffer</a> updates</li>\n<li>⭐<a href=\"https://github.com/tc39/proposal-realms\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Realms</a> update</li>\n<li><a href=\"https://github.com/Kingwl/proposal-array-find-from-last\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Array find from last</a> for stage 1</li>\n</ul>\n<h4>その他</h4>\n<ul>\n<li><a href=\"https://github.com/tc39/proposal-private-fields-in-in\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ergonomic brand checks for private fields</a> for stage 3</li>\n<li><a href=\"https://github.com/tc39/proposal-dynamic-code-brand-checks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dynamic code brand checks</a> for stage 2</li>\n<li><a href=\"https://github.com/hax/proposal-class-brand-check\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">class brand check</a> for stage 1</li>\n<li>⭐<a href=\"https://github.com/tc39/proposal-json-modules\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JSON modules</a> for stage 3</li>\n<li><a href=\"https://github.com/tc39/proposal-regexp-match-indices\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RegExp Match Indices</a> update</li>\n</ul>\n<hr>\n<h3><a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/Popup/explainer.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Enabling Popups - MicrosoftEdge/MSEdgeExplainers</a></h3>\n<ul>\n<li>共有者: @zaki___yama</li>\n</ul>\n<p><a href=\"https://cybozu.github.io/frontend-monthly/posts/2020-08\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">以前の Frontend Monthly</a>で \"<a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/ControlUICustomization/explainer.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Enabling Custom Control UI</a>\" というプロポーザルを紹介したんですが、その続編みたいなプロポーザルです。\nといってもその後の動向を熱心にウォッチしてたわけではなく、例によって Edge の PM の<a href=\"https://twitter.com/soMelanieSaid/status/1352324867941568512?s=20\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ツイート</a> から知りました。</p>\n<h4>概要</h4>\n<ul>\n<li><code class=\"language-text\">&lt;popup&gt;</code> という新しい HTML 要素の提案です</li>\n<li>他の HTML 要素と同じようにマークアップを書き、 <code class=\"language-text\">show()/hide()</code> メソッドで表示／非表示を制御します</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">aria-haspopup</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menuPopup<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menuButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  Menu\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>popup</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menuPopup<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">anchor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menuButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- Markup for menuitems goes here --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>popup</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"menuButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"menuPopup\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">popup</code> は独立した要素の可能性もあるし、combobox のようなより大きな複合的な(composited)コンポーネントの一部の可能性もあります</li>\n</ul>\n<h4>面白いと思ったポイントいくつか</h4>\n<ul>\n<li>\n<p>popup は以下の挙動をする。これらの挙動をプロポーザル中では \"light dismiss\" と表現している</p>\n<ul>\n<li>ユーザーが Escape キーを押した</li>\n<li><code class=\"language-text\">popup</code> またはそのアンカー要素の layout が変更された</li>\n<li>フォーカスが外れた</li>\n</ul>\n</li>\n<li>[<a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/Popup/explainer.md#anchored-positioning\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Anchored positioning</a>] popup の位置を他の要素に紐付けられるよう、CSS anchored positioning scheme という別のプロポーザルも策定予定。ただ現状も <code class=\"language-text\">anchor</code> 属性を指定すると別の要素に紐付けることができる</li>\n<li>\n<p>[<a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/Popup/explainer.md#alternate-solutions-considered\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Alternate Solutions Considered</a>] 別のソリューションとして <code class=\"language-text\">&lt;dialog&gt;</code> 要素の拡張も考えたけど、popup と dialog で期待する機能が違うのでやめた。たとえば</p>\n<ul>\n<li>popup は軽量な UI で、ユーザーが他の UI を操作したときなどに自動的に消えてほしいけど、dialog は一般的にユーザーが明示的に閉じないと消えない</li>\n<li>popup は一度に 1 つしか表示できないが、dialog はそうとは限らない</li>\n<li>dialog を表示したとき popup は非表示になるべきだけど、逆はそうとは限らない</li>\n</ul>\n</li>\n<li>[<a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/Popup/explainer.md#areas-for-exploration\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Areas for exploration</a>] 表示・非表示を手続き的に書かないといけないのかーと思ったけど、宣言的に書けるような属性も検討するかも</li>\n</ul>\n<hr>\n<h3><a href=\"https://www.smashingmagazine.com/2021/01/smashingmag-performance-case-study/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">How We Improved SmashingMag Performance</a></h3>\n<ul>\n<li>共有者: @b4h0-c4t</li>\n</ul>\n<h4>一行まとめ</h4>\n<p>JAMStack 上で React を使って構築した Web サイトのパフォーマンスを最適化し、Core Web Vitals のメトリクスを改善した手法の話。</p>\n<h4>序文</h4>\n<p>Web パフォーマンスについての話の多くはオーバーホールから始まる。\n一方で、時間経過による機能追加の結果コードの断片化やサードパーティスクリプトの読み込み高速化のための \"fourth-party\" スクリプトが入ってしまう。</p>\n<p>実際、smashing 社もパフォーマンスへの目標をしばしば忘れていた結果、Lighthouse スコアがボロボロになっていた。</p>\n<h4>That’s Where We Were</h4>\n<p>対象サービス(おそらくブログ)は JAMStack 上で Hugo + React を用いて構築されている。\n記事のビルドには 6 分近く掛かり、CSS の注入、Webpack のコード分割、広告・昨日の動的挿入 RSS 生成、エッジに配信するための AB テスト等のビルドプロセスが走っていた。</p>\n<h4>Identifying Bottlenecks</h4>\n<p>ボトルネックを特定するためにいくつかのパフォーマンス評価を実施した。</p>\n<p>LCP の結果、5-9 月あたりからパフォーマンスの悪化が見られた。\nこの時期はナビゲーションバーのリリースを実施していたことから、この指標からボトルネックを特定するのは容易だった。</p>\n<p>サービスのリクエストマップを調べた当初は特に問題はなさそうだった。\nしかし、特定の条件下で DOM のサイズが爆発的に大きくなることを発見した。\n主要なページのみを計測対象とした結果発見できていなかったが、埋め込み等が多く用いられている記事を計測した際は膨大なリクエストが行き来していることがわかった。</p>\n<h4>やったこと</h4>\n<ul>\n<li>head の読み込み順序改善</li>\n<li>特に重要な CSS の手動生成</li>\n<li>Web フォントの読込変更</li>\n<li>モノリシックな JS の特定と分解</li>\n<li>サードパーティコンテンツの適切な割り当て(レイアウト)</li>\n<li>体験の向上(AVIF 生成や著作画像のプリロード等)</li>\n</ul>\n<h4>どうなったか</h4>\n<ul>\n<li>Lighthouse のスコアはかなり改善した。\nインタラクティブタイムとブロッキングタイムが今後の課題で、CSS サイズの縮小やモバイル用のバンドルも検討している。</li>\n</ul>\n<hr>\n<h3><a href=\"https://youtu.be/BHogHiiyuQk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Upgrading DevTools' architecture to the modern web</a></h3>\n<ul>\n<li>共有者: @toshi__toma</li>\n</ul>\n<p>2020 年の Chrome DevSummit の動画で、Chrome DevTools が取り組んだアーキテクチャの移行についての動画。</p>\n<p>取り組んだもの</p>\n<ul>\n<li>\n<p>モジュールシステム</p>\n<ul>\n<li>Custom Module System を JavaScript Modules へ</li>\n</ul>\n</li>\n<li>\n<p>型システム</p>\n<ul>\n<li>Closure Compiler を TypeScript Compiler へ</li>\n</ul>\n</li>\n<li>\n<p>ビルドシステム</p>\n<ul>\n<li>Python Scripts を Rollup へ</li>\n</ul>\n</li>\n<li>\n<p>コンポーネント</p>\n<ul>\n<li>独自の Custom Components を Web Components へ</li>\n</ul>\n</li>\n</ul>\n<p>DevTools は、大規模で歴史の長い Web アプリケーションなので、それらの移行をどのように進めたのか、移行での学びなどがまとまってる。\n移行の計画・実施・管理の 3 つについて説明されていて、とても参考になるものが多かったです。</p>\n<hr>","frontmatter":{"title":"Cybozu Frontend Monthly","date":"2021-01-26T17:00:00+09:00","no":7,"connpass":"https://cybozu.connpass.com/event/202029/","streamUrl":"https://www.youtube.com/watch?v=MMFzKjIzdRA","hashTag":null,"members":[{"name":"@koba04","link":"https://twitter.com/koba04"},{"name":"@pirosikick","link":"https://twitter.com/pirosikick"},{"name":"@toshi__toma","link":"https://twitter.com/toshi__toma"},{"name":"@zaki___yama","link":"https://twitter.com/zaki___yama"},{"name":"@__sakito__","link":"https://twitter.com/__sakito__"},{"name":"@shisama_","link":"https://twitter.com/shisama_"},{"name":"@nakajmg","link":"https://twitter.com/nakajmg"},{"name":"@b4h0_c4t","link":"https://twitter.com/b4h0_c4t"},{"name":"@__sosukesuzuki","link":"https://twitter.com/__sosukesuzuki"}],"guest":null}}},"pageContext":{"id":"c5f78b62-3561-5b91-9d9d-d6dd436336c5"}},"staticQueryHashes":["764694655"]}